name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
  merge_group:

# You can leverage Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  build-lint:
    env:
      DATABASE_URL: file:./db.sqlite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup yarn
        uses: yarnpkg/setup-yarn@v2
        with:
          yarn-version: ">= 1.22"

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get Yarn cache directory
        id: yarn-cache
        run: |
          echo "yarn_cache_dir=$(yarn cache dir)" >> $GITHUB_ENV

      - name: Setup yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.yarn_cache_dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-

      - name: Install deps (with cache)
        run: yarn install

      # TODO: Free for all to find a better solution here.
      - name: Generate Prisma Client
        run: yarn turbo db:generate

      - name: Build, lint and type-check
        run: yarn turbo build lint type-check

      - name: Check workspaces
        run: yarn manypkg check
